Title: Remote Code Execution via path traversal bypass CVE-2024-4320  in parisneo/lollms

Proof of Concept: 
In the /mount_extension endpoint, there is a Path traversal vulnerability that allows attackers to go beyond the root directory:

@router.post("/mount_extension")
def mount_extension(data:ExtensionMountingInfos):
    check_access(lollmsElfServer, data.client_id)
    print("- Mounting extension")
    category = sanitize_path(data.category)
    name = sanitize_path(data.folder)

    package_path = f"{category}/{name}"
    package_full_path = lollmsElfServer.lollms_paths.extensions_zoo_path/package_path
    config_file = package_full_path / "config.yaml"
    if config_file.exists():
        lollmsElfServer.config["extensions"].append(package_path)
        lollmsElfServer.mounted_extensions = lollmsElfServer.rebuild_extensions()
        ...

The cause of the vulnerability is that the data.category and data.folder parameter allows passing an empty value (""), leading to confusion during the input sanitization process. This leads to being able to point the value of the package_path parameter to the root path via package_path = f"{category}/{name}". For example:

$ python
>>> category = ""
>>> category = sanitize_path(category)
>>> name = "tmp/hacked"
>>> sanitize_path(name)
>>> package_path = f"{category}/{name}"
>>> package_full_path = Path("/path/to/custom_personalities_path")/f"{package_path}"
>>> print(package_full_path)

PosixPath(/tmp/hacked)

Another special thing is that if the config.yaml file exists in a path that the attacker can control, this path will be included in the extensions list via lollmsElfServer.config["extensions" ].append(package_path) and then lollmsElfServer.rebuild_extensions() will be called and load __init__.py in current directory leads to RCE.

Impact: 
Remote Code Execution bypass forbid_remote_access and no user interaction required.

CVE ID: CVE-2024-5443
Status: (published)
Vulnerability Type: CWE-29: Path Traversal: '\..\filename'
Severity: Critical (9.8)
Attack Vector: Network
Attack Complexity: Low
Privileges Required: None
User Interaction: None
Scope: Unchanged
Confidentiality: High
Integrity: High
Availability: High
Registry: Pypi
Affected Version: 5.9.0
Visibility: Public
Status: Fixed
Disclosure Bounty: $900
Fix Bounty: $225
